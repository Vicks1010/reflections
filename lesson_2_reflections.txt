What happens when you initialize a repository? Why do you need to do it?

    Bu initializing a repository, be tell git that this directory should be
    tracked for changes, thus version tracking. We need to do it as git won't
    automatically start tracking changes for any given directory.

How is the staging area different from the working directory and the repository?
What value do you think it offers?

    Staging area is a step between working directory and repository. The changes
    on files in staging area are only added when making a commit. Thus staging
    area is between working directory and repository.

How can you use the staging area to make sure you have one commit per logical
change?

    The changes moved to staging area are only committed. Thus, the staging area
    can be used to make sure that we have one commit per logical change.

What are some situations when branches would be helpful in keeping your history
organized? How would branches help?

    Branches are helpful when creating an alternate versions or trying out some
    experimental features, which I'm not sure will work out. Thus making
    branches for these kind of changes will keep the history well organized.

How do the diagrams help you visualize the branch structure?

    By diagrams, we can se all the past commits, even the unreachable ones. This
    helps with visualizing the branch structure, which makes easier to
    understand the flow of code changes.

What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?

What are the pros and cons of Git's automatic merging vs. always doing merges
manually?
